import asyncio
from telegram.ext import MessageHandler, filters
import threading
import random
import os
import http.server
import socketserver
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, BotCommand, MenuButtonCommands
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
import nest_asyncio
# --- Telegram-–±–æ—Ç ---
nest_asyncio.apply()

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        keyboard = [
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ TapKraken", url="https://czolowek.github.io/taptaphomak0/")],
            [InlineKeyboardButton("üì¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", callback_data="invite")],
            [InlineKeyboardButton("üìã –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã", callback_data="rules")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        try:
            with open("Cover image.png", "rb") as photo:
                await context.bot.send_photo(
                    chat_id=update.effective_chat.id,
                    photo=photo,
                    caption=(
                        "üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TapKraken!* üêô\n\n"
                        "–ì–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–µ—Å–µ–ª—å—é –∏ —ç–ø–∏—á–Ω—ã–º –∫–ª–∏–∫–∞–º? üöÄ\n\n"
                        "üí∞ –°–æ–∫—Ä–æ–≤–∏—â–∞ –∂–¥—É—Ç ‚Äî –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è–π –ö—Ä–∞–∫–µ–Ω–∞ —Å–∫—É—á–∞—Ç—å! üíùüåä\n"
                        "üëá –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–≥—Ä—É–∂–∞–π—Å—è –≤ –∏–≥—Ä—É! üí•\n"
                    ),
                    parse_mode="Markdown",
                    reply_markup=reply_markup
                )
        except FileNotFoundError:
            # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text=(
                    "üéâ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TapKraken!* üêô\n\n"
                    "–ì–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –≤–µ—Å–µ–ª—å—é –∏ —ç–ø–∏—á–Ω—ã–º –∫–ª–∏–∫–∞–º? üöÄ\n\n"
                    "üí∞ –°–æ–∫—Ä–æ–≤–∏—â–∞ –∂–¥—É—Ç ‚Äî –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è–π –ö—Ä–∞–∫–µ–Ω–∞ —Å–∫—É—á–∞—Ç—å! üíùüåä\n"
                    "üëá –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø–æ–≥—Ä—É–∂–∞–π—Å—è –≤ –∏–≥—Ä—É! üí•\n"
                ),
                parse_mode="Markdown",
                reply_markup=reply_markup
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –º–µ–¥–∏–∞
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TapKraken! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("–ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")]])
        )

# –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        help_text = (
            "‚ÑπÔ∏è *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã TapKraken:*\n\n"
            "üéÆ /start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –∏ –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É\n"
            "‚ùì /help - –ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n"
            "üîó /invite - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π\n"
            "üìã /rules - –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\n"
            "‚úçÔ∏è /review - –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n"
            "‚ÑπÔ∏è /info - –û –ø—Ä–æ–µ–∫—Ç–µ\n"
            "üéÅ /daily - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞\n"
            "üéÅ /gift - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –¥—Ä—É–≥—É\n"
            "‚ö° /boost - –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å\n\n"
            "üì© *–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏:*\n"
            "Email: [tapkraken@gmail.com](mailto:tapkraken@gmail.com)\n"
            "WhatsApp: [+48516015761](https://wa.me/+48516015761)\n"
            "–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! üòä"
        )

        keyboard = [
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")],
            [InlineKeyboardButton("üìã –ü—Ä–∞–≤–∏–ª–∞", callback_data="rules"), 
             InlineKeyboardButton("‚úçÔ∏è –û—Ç–∑—ã–≤", callback_data="review")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=help_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /help: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /invite
async def invite(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = update.effective_user
        username = user.username or user.first_name or "–î—Ä—É–≥"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ —Å –ø–æ–º–æ—â—å—é callback_data
        keyboard = [
            [InlineKeyboardButton("üîó –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ", switch_inline_query="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ TapKraken!")],
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ TapKraken", url="https://czolowek.github.io/taptaphomak0/")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏
        invite_message = (
            f"üéâ *{username} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è –≤ –∏–≥—Ä—É TapKraken!* üêô\n\n"
            f"üîó –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π –∏–≥—Ä–µ - –∫–ª–∏–∫–∞–π –Ω–∞ –ö—Ä–∞–∫–µ–Ω–∞ –∏ —Å–æ–±–∏—Ä–∞–π —Å–æ–∫—Ä–æ–≤–∏—â–∞!\n\n"
            f"üí• –í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è, —Ä–µ—à–∞–π –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ –∏ –ø–æ–±–µ–∂–¥–∞–π –¥—Ä—É–∑–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤!\n\n"
            f"üëâ –ù–∞—á–Ω–∏ –∏–≥—Ä–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å: https://czolowek.github.io/taptaphomak0/"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏–ª–∏ –±–µ–∑ (–µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)
        try:
            with open("–±–∞–Ω–Ω–µ—Ä.webp", "rb") as banner_image:
                await context.bot.send_photo(
                    chat_id=update.effective_chat.id,
                    photo=banner_image,
                    caption=invite_message,
                    parse_mode="Markdown",
                    reply_markup=reply_markup
                )
        except FileNotFoundError:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text=invite_message,
                parse_mode="Markdown",
                reply_markup=reply_markup
            )

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /invite: {e}")
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

# –ö–æ–º–∞–Ω–¥–∞ /rules
async def rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        rules_text = (
            "üìã *–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã TapKraken:*\n\n"
            "üëÜ *–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–π–º–ø–ª–µ–π:*\n"
            "‚Ä¢ –ù–∞–∂–∏–º–∞–π –Ω–∞ –ö—Ä–∞–∫–µ–Ω–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–Ω–µ—Ç\n"
            "‚Ä¢ –£–ª—É—á—à–∞–π —Ç–∞–ø—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞\n"
            "‚Ä¢ –°–ª–µ–¥–∏ –∑–∞ —ç–Ω–µ—Ä–≥–∏–µ–π - –æ–Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º\n\n"
            
            "üß© *–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∏:*\n"
            "‚Ä¢ –°–æ–±–∏—Ä–∞–π —Ü–≤–µ—Ç–Ω—ã–µ –±–ª–æ–∫–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥\n"
            "‚Ä¢ –ß–µ–º —Å–ª–æ–∂–Ω–µ–µ —É—Ä–æ–≤–µ–Ω—å, —Ç–µ–º –±–æ–ª—å—à–µ –Ω–∞–≥—Ä–∞–¥–∞\n\n"
            
            "üë• *–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:*\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π –ø–æ–¥–∞—Ä–∫–∏ –¥—Ä—É–∑—å—è–º\n"
            "‚Ä¢ –°–æ—Ä–µ–≤–Ω—É–π—Å—è –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤\n"
            "‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–∞–π –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤\n\n"
            
            "üèÜ *–ó–∞–¥–∞–Ω–∏—è:*\n"
            "‚Ä¢ –í—ã–ø–æ–ª–Ω—è–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –±–æ–Ω—É—Å–æ–≤\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n\n"
            
            "üéÆ *–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã!* üêô"
        )
        
        keyboard = [
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="start")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=rules_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /rules: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /review (–¥–ª—è –æ—Ç–∑—ã–≤–æ–≤)
async def review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        feedback_text = (
            "‚úçÔ∏è *–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –æ TapKraken!*\n\n"
            "üìù –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∏ —á—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å.\n\n"
            "üåü –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ –¥–ª—è –Ω–∞—Å –∏ –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –∏–≥—Ä—É –µ—â—ë –ª—É—á—à–µ!"
        )
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
        keyboard = [
            [
                InlineKeyboardButton("üòç", callback_data="rating_5"),
                InlineKeyboardButton("üôÇ", callback_data="rating_4"),
                InlineKeyboardButton("üòê", callback_data="rating_3"),
                InlineKeyboardButton("üòï", callback_data="rating_2"),
                InlineKeyboardButton("üò¢", callback_data="rating_1")
            ],
            [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤", callback_data="write_review")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=feedback_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /review: {e}")

# –°–±–æ—Ä –æ—Ç–∑—ã–≤–æ–≤
async def collect_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        feedback_message = update.message.text
        username = update.effective_user.username or update.effective_user.first_name

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤ –≤ —Ñ–∞–π–ª
        try:
            with open("otzivi.txt", "a", encoding="utf-8") as file:
                file.write(f"–û—Ç–∑—ã–≤ –æ—Ç {username}: {feedback_message}\n")
        except Exception as file_error:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –æ—Ç–∑—ã–≤–∞ –≤ —Ñ–∞–π–ª: {file_error}")

        # –ö–Ω–æ–ø–∫–∞ "–ò–≥—Ä–∞—Ç—å"
        keyboard = [[InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")]]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="üí¨ *–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!*\n\n–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç—ë–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ –∏–≥—Ä—ã! üéÆ‚ú®",
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –æ—Ç–∑—ã–≤–∞: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /info
async def info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        info_text = (
            "‚ÑπÔ∏è *–û –ø—Ä–æ–µ–∫—Ç–µ TapKraken:*\n\n"
            "üéÆ TapKraken - —ç—Ç–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∫–ª–∏–∫–µ—Ä-–∏–≥—Ä–∞ –≤ —Å—Ç–∏–ª–µ Hamster Combat —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º –≤ —Å–∏–Ω–µ-–∫—Ä–∞—Å–Ω–æ-–±–µ–ª–æ–π –≥–∞–º–º–µ.\n\n"
            "üêô –ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π - –∫—Ä–∞—Å–Ω—ã–π –ö—Ä–∞–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–æ—Å–∏—Ç –≤–∞–º –æ—á–∫–∏ –∑–∞ –∫–∞–∂–¥—ã–π —Ç–∞–ø!\n\n"
            "‚ú® *–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:*\n"
            "‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫ —Å —Ü–≤–µ—Ç–Ω—ã–º–∏ –±–ª–æ–∫–∞–º–∏\n"
            "‚Ä¢ –°—Ç–∏–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏\n"
            "‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–≥—Ä—ã —Å –¥—Ä—É–∑—å—è–º–∏\n"
            "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç\n\n"
            "üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –ª—é–±–æ–≤—å—é –∫–æ–º–∞–Ω–¥–æ–π —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤ –≤ 2025 –≥–æ–¥—É\n\n"
            "üåê –í–µ—Ä—Å–∏—è: 2.0"
        )
        
        keyboard = [
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")],
            [InlineKeyboardButton("üì¢ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", callback_data="invite")],
            [InlineKeyboardButton("‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="review")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=info_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /info: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /daily - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞
async def daily_reward(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã
        reward_amount = random.randint(50, 200)
        
        reward_text = (
            f"üéÅ *–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞!*\n\n"
            f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ *{reward_amount} Kraken Coins* ü™ô\n\n"
            f"‚è∞ –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∑–∞–≤—Ç—Ä–∞ –∑–∞ –Ω–æ–≤–æ–π –Ω–∞–≥—Ä–∞–¥–æ–π!"
        )
        
        keyboard = [[InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å —Å–µ–π—á–∞—Å", url="https://czolowek.github.io/taptaphomak0/")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=reward_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /daily: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /gift - –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–∞—Ä–∫–∞ –¥—Ä—É–≥—É
async def gift(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        gift_text = (
            "üéÅ *–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –¥—Ä—É–≥—É*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–∞—Ä–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:"
        )
        
        keyboard = [
            [InlineKeyboardButton("ü™ô 50 –º–æ–Ω–µ—Ç", callback_data="gift_coins_50")],
            [InlineKeyboardButton("‚ö° –≠–Ω–µ—Ä–≥–∏—è", callback_data="gift_energy")],
            [InlineKeyboardButton("üöÄ –ë—É—Å—Ç–µ—Ä", callback_data="gift_booster")],
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=gift_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /gift: {e}")

# –ö–æ–º–∞–Ω–¥–∞ /boost - –í—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É—Å—Ç–µ—Ä—ã
async def boost(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        boost_text = (
            "‚ö° *–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±—É—Å—Ç–µ—Ä*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—É—Å—Ç–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å:"
        )
        
        keyboard = [
            [InlineKeyboardButton("üöÄ 2√ó –º–Ω–æ–∂–∏—Ç–µ–ª—å (30 –º–∏–Ω)", callback_data="boost_double")],
            [InlineKeyboardButton("‚ö° –ë–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è (15 –º–∏–Ω)", callback_data="boost_energy")],
            [InlineKeyboardButton("üí∞ +50% –º–æ–Ω–µ—Ç (1 —á–∞—Å)", callback_data="boost_coins")],
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=boost_text,
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /boost: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        query = update.callback_query
        await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
        
        callback_data = query.data
        
        if callback_data == "start":
            return await start(update, context)
        elif callback_data == "rules":
            return await rules(update, context)
        elif callback_data == "invite":
            return await invite(update, context)
        elif callback_data == "review":
            return await review(update, context)
        elif callback_data == "write_review":
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:"
            )
        elif callback_data.startswith("rating_"):
            rating = callback_data.split("_")[1]
            username = update.effective_user.username or update.effective_user.first_name
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥
            try:
                with open("otzivi.txt", "a", encoding="utf-8") as file:
                    file.write(f"–†–µ–π—Ç–∏–Ω–≥ –æ—Ç {username}: {rating} –∑–≤–µ–∑–¥\n")
            except Exception as file_error:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ —Ñ–∞–π–ª: {file_error}")
            
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text=f"‚≠ê –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É! –í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ –∏–≥—Ä–µ {rating} –∏–∑ 5 –∑–≤–µ–∑–¥.",
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")]])
            )
        elif callback_data.startswith("gift_") or callback_data.startswith("boost_"):
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –±—É—Å—Ç–µ—Ä–æ–≤ (—ç–º—É–ª—è—Ü–∏—è)
            message = "üéâ –§—É–Ω–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–≥—Ä–µ."
            
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text=message,
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", url="https://czolowek.github.io/taptaphomak0/")]])
            )
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")

# –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
def run_server():
    try:
        os.chdir("docs")  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É docs, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∞–π—Ç
        PORT = 5000
        Handler = http.server.SimpleHTTPRequestHandler
        
        with socketserver.TCPServer(("", PORT), Handler) as httpd:
            print(f"–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://127.0.0.1:{PORT}")
            httpd.serve_forever()
    except OSError as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    except Exception as e:
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    try:
        # –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        server_thread = threading.Thread(target=run_server)
        server_thread.daemon = True
        server_thread.start()

        application = Application.builder().token("8160638043:AAGVn4wvRKKamkSPrfoxWDv19LTp3mSFFU8").build()

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("invite", invite))
        application.add_handler(CommandHandler("rules", rules))
        application.add_handler(CommandHandler("review", review))
        application.add_handler(CommandHandler("info", info))
        application.add_handler(CommandHandler("daily", daily_reward))
        application.add_handler(CommandHandler("gift", gift))
        application.add_handler(CommandHandler("boost", boost))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        application.add_handler(CallbackQueryHandler(handle_callback))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –æ—Ç–∑—ã–≤–æ–≤)
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, collect_feedback))

        # –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        commands = [
            BotCommand("start", "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"),
            BotCommand("help", "–°–ø—Ä–∞–≤–∫–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"),
            BotCommand("invite", "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π"),
            BotCommand("rules", "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"),
            BotCommand("review", "–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"),
            BotCommand("info", "–û –ø—Ä–æ–µ–∫—Ç–µ"),
            BotCommand("daily", "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞"),
            BotCommand("gift", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫"),
            BotCommand("boost", "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±—É—Å—Ç–µ—Ä")
        ]
        await application.bot.set_my_commands(commands)

        # –ù–∞—Å—Ç—Ä–æ–∏–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        await application.bot.set_chat_menu_button(menu_button=MenuButtonCommands())
        print("–ö–Ω–æ–ø–∫–∞ Menu —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚úÖ")

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        print("Telegram-–±–æ—Ç TapKraken –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥...")
        await application.run_polling()

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())  # –†–∞–±–æ—Ç–∞–µ—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è nest_asyncio